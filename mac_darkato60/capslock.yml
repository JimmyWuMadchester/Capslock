---
title: Darkato 60 keys Capslock Enhancement
version: 1.0.0
maintainers: [ Darkato ]
author: Darkato(adamoweb@gmail.com)

rules:

  ################################################################
  #                    Capslock to Esc/Hyper                     #
  ################################################################
  - description: CapsLock to Hyper
    manipulators:

      - description: 'capslock = esc(click) | hyper(hold)'
        type: basic
        from: { key_code: caps_lock ,modifiers: { optional: [ any ] } }
        to: [ { key_code: right_shift,modifiers: [ right_command,right_control,right_option ] } ]
        to_if_alone: [ { key_code: escape } ]

      - description: 'escape = capslock switch'
        type: basic
        from: { key_code: escape, modifiers: { optional: [ caps_lock ], mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: caps_lock , modifiers: [ left_control ] } ]

      - description: 'spacebar = language switch'
        type: basic
        from: { key_code: spacebar, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: spacebar , modifiers: [ left_control ] } ]

      - description: 'command + spacebar = emoji'
        type: basic
        from: { key_code: spacebar, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: spacebar , modifiers: [ left_control,left_command ] } ]


  ################################################################
  #                       Hyper Navigation                       #
  ################################################################
  - description: Hyper Navigation
    manipulators:

      #==========================================================#
      # Cursor move by word                                      #
      #==========================================================#
      # normal: cursor move left by word
      - description: ' v = option + left'
        conditions: [ {"bundle_identifiers": ["^com.googlecode.iterm2"],"type": "frontmost_application_unless"}]
        type: basic
        from: { key_code: v, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_option ] } ]

      - description: ' v = option + b'
        conditions: [ {"bundle_identifiers": ["^com.googlecode.iterm2"],"type": "frontmost_application_if"}]
        type: basic
        from: { key_code: v, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: b , modifiers: [ left_option ] } ]

      # command: selection left by word
      - description: ' command + v = shift + option + left'
        type: basic
        from: { key_code: v, modifiers: { mandatory: [ left_command,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_shift,left_option ] } ]

      # normal: cursor move right by word
      - description: ' b = option + right'
        conditions: [ {"bundle_identifiers": ["^com.googlecode.iterm2"],"type": "frontmost_application_unless"}]
        type: basic
        from: { key_code: b, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_option ] } ]

      - description: ' b = option + f'
        conditions: [ {"bundle_identifiers": ["^com.googlecode.iterm2"],"type": "frontmost_application_if"}]
        type: basic
        from: { key_code: b, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: f , modifiers: [ left_option ] } ]

      # command: selection right by word
      - description: ' command + b = shift + option + right'
        type: basic
        from: { key_code: b, modifiers: { mandatory: [ left_command,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_shift,left_option ] } ]

      #==========================================================#
      # ( h ) + ( ⌘⌥⇧⌃ )  -> ( left )                            #
      #==========================================================#
      # normal: cursor move
      - description: ' h = left'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow } ]

      # command: selection
      - description: 'command + h = shift + left'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_shift ] } ]

      # shift: tab/win management
      - description: 'shift + h = ctrl + shift + tab (prev tab)'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: tab , modifiers: [ left_control , left_shift ] } ]

      #==========================================================#
      # ( j ) + ( ⌘⌥⇧⌃ )  -> ( down )                            #
      #==========================================================#
      # normal: cursor move
      - description: ' j = down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow } ]

      # command: selection
      - description: 'command + j = shift + down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow , modifiers: [ left_shift ] } ]

      # shift: tab/win management
      - description: 'shift + j = command + tab (next application)'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: tab , modifiers: [ left_command ] } ]


      #==========================================================#
      # ( k ) + ( ⌘⌥⇧⌃ )  -> ( up )                              #
      #==========================================================#
      # normal: cursor move
      - description: ' k = up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow } ]

      # command: selection
      - description: 'command + k = shift + up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow , modifiers: [ left_shift ] } ]

      # shift: tab/win management
      - description: 'shift + k = command + tab (prev application)'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: tab , modifiers: [ left_command, left_shift ] } ]


      #==========================================================#
      # ( l ) + ( ⌘⌥⇧⌃ )  -> ( right )                           #
      #==========================================================#
      # normal: cursor move
      - description: ' l = right'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow } ]

      # command: selection
      - description: 'command + l = shift + right'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_shift ] } ]

      # shift: tab/win management
      - description: 'shift + l = command + tab (next tab)'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: tab , modifiers: [ left_control ] } ]


      #==========================================================#
      # ( u ) + ( ⌘⌥⇧⌃ )  -> ( PageUp )                          #
      #==========================================================#
      # shift: tab/win management (TODO: require manual setup)
      - description: 'shift + u = option + command + hyphen (zoom out)'
        type: basic
        from: { key_code: u, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: hyphen , modifiers: [ left_command,left_option ] } ]

      # control: desktop management
      - description: 'control + u = ctrl + command + f (fullscreen)'
        type: basic
        from: { key_code: u, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: f , modifiers: [ left_control,left_command ] } ]

      # normal: cursor move
      - description: ' u = page_up'
        type: basic
        from: { key_code: u, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: page_up } ]



      #==========================================================#
      # ( i ) + ( ⌘⌥⇧⌃ )  -> ( PageUp )                          #
      #==========================================================#
      # command: selection
      - description: 'command + i = shift + home'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: home , modifiers: [ left_shift ] } ]

      # option + command: line selection
      - description: 'option + command + i = select whole line to head'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_option,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: end },{ key_code: home , modifiers: [ left_shift ] },{ key_code: home , modifiers: [ left_shift ] } ]

      # shift: tab/win management (TODO: require manual setup)
      - description: 'shift + i = command + shift + ` (prev window within app)'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: grave_accent_and_tilde , modifiers: [ left_command,left_shift ] } ]

      # control: desktop management
      - description: 'control + i = command + h (hide current window)'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: h , modifiers: [ left_command ] } ]

      # option: mouse right click
      - description: 'option + i = mouse right click'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { pointing_button: button2 } ]

      # shift + option: mouse right click
      - description: 'shift + option + i = mouse move down fast'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_shift,left_option,  right_command,right_control,right_shift,right_option ] } }
        to: [ { pointing_button: button2 } ]

      # shift + control: mouse wheel reverse
      - description: 'shift + control + i = mouse wheel down (rev)'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: -64 } } ]

      # shift + command: mouse wheel reverse fast
      - description: 'shift + command + i = mouse wheel down (rev) fast'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_shift,left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: -128 } } ]

      # normal: cursor move
      - description: ' i = home'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: home } ]


      #==========================================================#
      # ( o ) + ( ⌘⌥⇧⌃ )  -> ( PageUp )                          #
      #==========================================================#
      # command: selection
      - description: 'command + o = shift + end'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: end , modifiers: [ left_shift ] } ]

      # option + command: line selection
      - description: 'option + command + o = select whole'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_option,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: home },{ key_code: end , modifiers: [ left_shift ] } ]

      # shift: tab/win management (TODO: require manual setup)
      - description: 'shift + o = command ` (next window within app)'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: grave_accent_and_tilde , modifiers: [ left_command ] } ]

      # control: desktop management
      - description: 'control + o = option + command + h (expose all)'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow , modifiers: [ left_control ] } ]

      # option: mouse backward
      - description: 'option + o = mouse backward'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { pointing_button: button4 } ]

      # shift + option: mouse backward
      - description: 'shift + option + o = mouse backward'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_shift,left_option,  right_command,right_control,right_shift,right_option ] } }
        to: [ { pointing_button: button4 } ]

      # shift + control: mouse wheel
      - description: 'shift + control + o = mouse wheel up (rev)'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: 64 } } ]

      # shift + command: mouse wheel reverse
      - description: 'shift + command + o = mouse wheel up (rev) fast'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_shift,left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: 128 } } ]

      # normal: cursor move
      - description: ' o = end'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: end } ]


      #==========================================================#
      # ( p ) + ( ⌘⌥⇧⌃ )  -> ( PageUp )                          #
      #==========================================================#
      # command: selection
      - description: 'command + p = shift + page_down'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: page_down , modifiers: [ left_shift ] } ]

      # option + command: word/para selection
      - description: 'option + command + p = shift + page_down'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ left_option,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: page_down , modifiers: [ left_shift ] } ]

      # shift: tab/win management (TODO: require manual setup)
      - description: 'shift + p = option + command + equal_sign (zoom in)'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: equal_sign , modifiers: [ left_command,left_option ] } ]

      # control: desktop management
      - description: 'control + p = LaunchPad'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a 'Launchpad' } ]

      # option: mouse forward
      - description: 'option + p = mouse forward'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { pointing_button: button5 } ]

      # shift + option: mouse forward
      - description: 'shift + option + p = mouse forward'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ left_shift,left_option,  right_command,right_control,right_shift,right_option ] } }
        to: [ { pointing_button: button5 } ]

      # shift + control: mouse wheel reverse
      - description: 'shift + control + p = mouse wheel right (rev)'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 64 } } ]

      # shift + command: mouse wheel reverse fast
      - description: 'shift + command + p = mouse wheel right (rev) fast'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ left_shift,left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 128 } } ]

      # normal: cursor move
      - description: ' p = page_down'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: page_down } ]


      ################################################################
      #                     Cursor Navigation                        #
      ################################################################

      #==========================================================#
      # normal mouse move                                        #
      #==========================================================#
      - description: 'up arrow = mouse up'
        type: basic
        from: { key_code: up_arrow, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { y: -1600 } } ]

      - description: 'down arrow = mouse down'
        type: basic
        from: { key_code: down_arrow, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { y: 1600 } } ]

      - description: 'left arrow = mouse left'
        type: basic
        from: { key_code: left_arrow, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: -1600 } } ]

      - description: 'right arrow = mouse right'
        type: basic
        from: { key_code: right_arrow, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: +1600 } } ]



  ################################################################
  #                       Hyper Deletion                         #
  ################################################################
  - description: Hyper Deletion
    manipulators:

      # + command = delete line
      - description: 'command + n = delete whole line'
        type: basic
        from: { key_code: n, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow, modifiers: [ left_shift,left_command ] } , { key_code: delete_or_backspace } ]

      - description: 'command + m = delete word ahead'
        type: basic
        from: { key_code: m, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_or_backspace, modifiers: [ left_option ] } ]

      - description: 'command + , = delete word after'
        type: basic
        from: { key_code: comma, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_forward, modifiers: [ left_option ] } ]

      - description: 'command + . = delete whole line'
        type: basic
        from: { key_code: period, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow, modifiers: [ left_shift,left_command ] } , { key_code: delete_or_backspace } ]

      # delete char and word
      - description: 'n = delete a word ahead'
        type: basic
        from: { key_code: n, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_or_backspace, modifiers: [ left_option ] } ]

      - description: 'm = delete a char ahead'
        type: basic
        from: { key_code: m, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_or_backspace } ]

      - description: ', = delete a char after'
        type: basic
        from: { key_code: comma, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_forward } ]

      - description: '. = delete a word after'
        type: basic
        from: { key_code: period, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_forward, modifiers: [ left_option ] } ]




  ################################################################
  #                        Hyper MouseKey                        #
  ################################################################
  - description: Hyper MouseKey
    manipulators:

      #==========================================================#
      # ( keypad 0.⌤-+ )  -> ( mouse buttons )                   #
      #==========================================================#
      # 0.enter+- to mouse buttons
      - description: 'keypad0 = mouse left click'
        type: basic
        from: { key_code: keypad_0, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ], optional: [ left_shift, left_command, left_option, left_control ] } }
        to: [ { pointing_button: button1 } ]

      - description: 'keypad_enter = mouse right click'
        type: basic
        from: { key_code: keypad_enter, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ], optional: [ left_shift, left_command, left_option, left_control ] } }
        to: [ { pointing_button: button2 } ]

      - description: 'keypad. = mouse middle click'
        type: basic
        from: { key_code: keypad_period ,modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] , optional: [ left_shift, left_command, left_option, left_control ] } }
        to: [ { pointing_button: button3 } ]

      - description: 'keypad+ = mouse button 5 forward'
        type: basic
        from: { key_code: keypad_plus , modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] , optional: [ left_shift, left_command, left_option, left_control ] } }
        to: [ { pointing_button: button5 } ]

      - description: 'keypad- = mouse button 4 back'
        type: basic
        from: { key_code: keypad_hyphen ,modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] , optional: [ left_shift, left_command, left_option, left_control ] } }
        to: [ { pointing_button: button4 } ]


      #==========================================================#
      # ( numlock=/* )   ->  ( mouse wheel )                     #
      #==========================================================#
      - description: 'keypad_num_lock = mouse wheel left'
        type: basic
        from: { key_code: keypad_num_lock, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: -32 } } ]

      - description: 'keypad_equal_sign = slow mouse wheel down'
        type: basic
        from: { key_code: keypad_equal_sign, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: 32 } } ]

      - description: 'keypad_slash = slow mouse wheel up'
        type: basic
        from: { key_code: keypad_slash, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: -32 } } ]

      - description: 'keypad_asterisk = mouse wheel right'
        type: basic
        from: { key_code: keypad_asterisk, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 32 } } ]


      #==========================================================#
      # mouse wheel (shift)                                      #
      #==========================================================#
      - description: 'shift + 1 = wheel ↙️'
        type: basic
        from: { key_code: keypad_1, modifiers: { mandatory: [ left_shift, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 45, vertical_wheel: 45 } } ]

      - description: 'shift + 2 = wheel ⬇️️'
        type: basic
        from: { key_code: keypad_2, modifiers: { mandatory: [ left_shift, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: 64 } } ]

      - description: 'shift + 3 = wheel ↘️️️'
        type: basic
        from: { key_code: keypad_3, modifiers: { mandatory: [ left_shift, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: -45, vertical_wheel: 45 } } ]

      - description: 'shift + 4 = wheel ⬅️'
        type: basic
        from: { key_code: keypad_4, modifiers: { mandatory: [ left_shift, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 64 } } ]

      - description: 'shift + 5 = wheel ·'
        type: basic
        from: { key_code: keypad_5, modifiers: { mandatory: [ left_shift, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 0, vertical_wheel: 0 } } ]

      - description: 'shift + 6 = wheel ➡️'
        type: basic
        from: { key_code: keypad_6, modifiers: { mandatory: [ left_shift, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: -64 } } ]

      - description: 'shift + 7 = wheel ↖️'
        type: basic
        from: { key_code: keypad_7, modifiers: { mandatory: [ left_shift, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 45, vertical_wheel: -45 } } ]

      - description: 'shift + 8 = wheel ⬆️'
        type: basic
        from: { key_code: keypad_8, modifiers: { mandatory: [ left_shift, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: -64 } } ]

      - description: 'shift + 9 = wheel ↗️️'
        type: basic
        from: { key_code: keypad_9, modifiers: { mandatory: [ left_shift, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: -45, vertical_wheel: -45 } } ]


      #==========================================================#
      # slow mouse wheel  (shift + option)                       #
      #==========================================================#
      - description: 'shift + option + 1 = wheel ↙️'
        type: basic
        from: { key_code: keypad_1, modifiers: { mandatory: [ left_shift,left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 23, vertical_wheel: 23 } } ]

      - description: 'shift + option + 2 = wheel ⬇️️'
        type: basic
        from: { key_code: keypad_2, modifiers: { mandatory: [ left_shift,left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: 32 } } ]

      - description: 'shift + option + 3 = wheel ↘️️️'
        type: basic
        from: { key_code: keypad_3, modifiers: { mandatory: [ left_shift,left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: -23, vertical_wheel: 23 } } ]

      - description: 'shift + option + 4 = wheel ⬅️'
        type: basic
        from: { key_code: keypad_4, modifiers: { mandatory: [ left_shift,left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 32 } } ]

      - description: 'shift + option + 5 = wheel ·'
        type: basic
        from: { key_code: keypad_5, modifiers: { mandatory: [ left_shift,left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 0, vertical_wheel: 0 } } ]

      - description: 'shift + option + 6 = wheel ➡️'
        type: basic
        from: { key_code: keypad_6, modifiers: { mandatory: [ left_shift,left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: -32 } } ]

      - description: 'shift + option + 7 = wheel ↖️'
        type: basic
        from: { key_code: keypad_7, modifiers: { mandatory: [ left_shift,left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 23, vertical_wheel: -23 } } ]

      - description: 'shift + option + 8 = wheel ⬆️'
        type: basic
        from: { key_code: keypad_8, modifiers: { mandatory: [ left_shift,left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: -32 } } ]

      - description: 'shift + option + 9 = wheel ↗️️'
        type: basic
        from: { key_code: keypad_9, modifiers: { mandatory: [ left_shift,left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: -23, vertical_wheel: -23 } } ]


      #==========================================================#
      # fast mouse wheel (shift + command)                       #
      #==========================================================#
      - description: 'shift + command + 1 = wheel ↙️'
        type: basic
        from: { key_code: keypad_1, modifiers: { mandatory: [ left_shift,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 91, vertical_wheel: 91 } } ]

      - description: 'shift + command + 2 = wheel ⬇️️'
        type: basic
        from: { key_code: keypad_2, modifiers: { mandatory: [ left_shift,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: 128 } } ]

      - description: 'shift + command + 3 = wheel ↘️️️'
        type: basic
        from: { key_code: keypad_3, modifiers: { mandatory: [ left_shift,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: -91, vertical_wheel: 91 } } ]

      - description: 'shift + command + 4 = wheel ⬅️'
        type: basic
        from: { key_code: keypad_4, modifiers: { mandatory: [ left_shift,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 128 } } ]

      - description: 'shift + command + 5 = wheel ·'
        type: basic
        from: { key_code: keypad_5, modifiers: { mandatory: [ left_shift,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 0, vertical_wheel: 0 } } ]

      - description: 'shift + command + 6 = wheel ➡️'
        type: basic
        from: { key_code: keypad_6, modifiers: { mandatory: [ left_shift,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: -128 } } ]

      - description: 'shift + command + 7 = wheel ↖️'
        type: basic
        from: { key_code: keypad_7, modifiers: { mandatory: [ left_shift,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 91, vertical_wheel: -91 } } ]

      - description: 'shift + command + 8 = wheel ⬆️'
        type: basic
        from: { key_code: keypad_8, modifiers: { mandatory: [ left_shift,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: -128 } } ]

      - description: 'shift + command + 9 = wheel ↗️️'
        type: basic
        from: { key_code: keypad_9, modifiers: { mandatory: [ left_shift,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: -91, vertical_wheel: -91 } } ]



      #==========================================================#
      # slow mouse move (option)                                 #
      #==========================================================#
      - description: 'option + 1 = ↙️ slow'
        type: basic
        from: { key_code: keypad_1, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: -561, y: 561 } } ]

      - description: 'option + 2 = ⬇️️ slow'
        type: basic
        from: { key_code: keypad_2, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { y: 800 } } ]

      - description: 'option + 3 = ↘️️️ slow'
        type: basic
        from: { key_code: keypad_3, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: 561, y: 561 } } ]

      - description: 'option + 4 = ⬅️ slow'
        type: basic
        from: { key_code: keypad_4, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: -800 } } ]

      - description: 'option + 5 = · slow'
        type: basic
        from: { key_code: keypad_5, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: 0, y: 0 } } ]

      - description: 'option + 6 = ➡️ slow'
        type: basic
        from: { key_code: keypad_6, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: 800 } } ]

      - description: 'option + 7 = ↖️ slow'
        type: basic
        from: { key_code: keypad_7, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: -561, y: -561 } } ]

      - description: 'option + 8 = ⬆️ slow'
        type: basic
        from: { key_code: keypad_8, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { y: -800 } } ]

      - description: 'option + 9 = ↗️️ slow'
        type: basic
        from: { key_code: keypad_9, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: 561, y: -561 } } ]


      #==========================================================#
      # fast mouse move (command)                                #
      #==========================================================#
      - description: 'command + 1 = ↙️ fast'
        type: basic
        from: { key_code: keypad_1, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: -2262, y: 2262 } } ]

      - description: 'command + 2 = ⬇️️ fast'
        type: basic
        from: { key_code: keypad_2, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { y: 3200 } } ]

      - description: 'command + 3 = ↘️️️ fast'
        type: basic
        from: { key_code: keypad_3, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: 2262, y: 2262 } } ]

      - description: 'command + 4 = ⬅️ fast'
        type: basic
        from: { key_code: keypad_4, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: -3200 } } ]

      - description: 'command + 5 = · fast'
        type: basic
        from: { key_code: keypad_5, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: 0, y: 0 } } ]

      - description: 'command + 6 = ➡️ fast'
        type: basic
        from: { key_code: keypad_6, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: 3200 } } ]

      - description: 'command + 7 = ↖️ fast'
        type: basic
        from: { key_code: keypad_7, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: -2262, y: -2262 } } ]

      - description: 'command + 8 = ⬆️ fast'
        type: basic
        from: { key_code: keypad_8, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { y: -3200 } } ]

      - description: 'command + 9 = ↗️️ fast'
        type: basic
        from: { key_code: keypad_9, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: 2262, y: -2262 } } ]


      #==========================================================#
      # mouse move                                               #
      #==========================================================#
      - description: '1 = ↙️'
        type: basic
        from: { key_code: keypad_1, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: -1131, y: 1131 } } ]

      - description: '2 = ⬇️️'
        type: basic
        from: { key_code: keypad_2, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { y: 1600 } } ]

      - description: '3 = ↘️️️'
        type: basic
        from: { key_code: keypad_3, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: 1131, y: 1131 } } ]

      - description: '4 = ⬅️'
        type: basic
        from: { key_code: keypad_4, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: -1600 } } ]

      - description: '5 = ·'
        type: basic
        from: { key_code: keypad_5, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: 0, y: 0 } } ]

      - description: '6 = ➡️'
        type: basic
        from: { key_code: keypad_6, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: 1600 } } ]

      - description: '7 = ↖️'
        type: basic
        from: { key_code: keypad_7, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: -1131, y: -1131 } } ]

      - description: '8 = ⬆️'
        type: basic
        from: { key_code: keypad_8, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { y: -1600 } } ]

      - description: '9 = ↗️️'
        type: basic
        from: { key_code: keypad_9, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { x: 1131, y: -1131 } } ]




  ################################################################
  #                        Hyper Window                          #
  ################################################################
  - description: Hyper Window
    manipulators:

      #==========================================================#
      # ( tab ) --> win/desktop switch                           #
      #==========================================================#

      - description: 'tab = alter app'
        type: basic
        from: { key_code: tab, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: tab , modifiers: [ left_command ] } ]

      #==========================================================#
      # ( q ) --> exit                                           #
      #==========================================================#
      - description: 'control + q = lock screen'
        type: basic
        from: { key_code: q, modifiers: { mandatory: [ left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: q , modifiers: [ left_control,left_command ] } ]

      - description: 'shift + q = logout'
        type: basic
        from: { key_code: q, modifiers: { mandatory: [ left_shift,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: q , modifiers: [ left_shift,left_command ] } ]

      - description: 'command + q = force close app'
        type: basic
        from: { key_code: q, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: q , modifiers: [ left_command ] } ]
        # to: [ { key_code: escape , modifiers: [ left_command,left_option ] } ]  # TODO: May not work

      - description: 'q = close app'
        type: basic
        from: { key_code: q, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: q , modifiers: [ left_command ] } ]


      #==========================================================#
      # ( w ) --> close tab                                      #
      #==========================================================#
      - description: 'shift + w = sleep'
        type: basic
        from: { key_code: w, modifiers: { mandatory: [ left_shift,  right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: pmset sleepnow } ]

      - description: 'option + w = display sleep'
        type: basic
        from: { key_code: w, modifiers: { mandatory: [ left_option,  right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: pmset displaysleepnow } ]

      - description: 'command + w = close all tab of app'
        type: basic
        from: { key_code: w, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: w , modifiers: [ left_command ] } ]
        # to: [ { key_code: w , modifiers: [ left_command,left_option ] } ]  # TODO: May not work

      - description: 'w = close tab'
        type: basic
        from: { key_code: w, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: w , modifiers: [ left_command ] } ]


      #==========================================================#
      # ( a ) --> window management                              #
      #==========================================================#
      - description: 'control + a = launchpad'
        type: basic
        from: { key_code: a, modifiers: { mandatory: [ left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a 'Launchpad' } ]

      - description: 'command + a = expose all'
        type: basic
        from: { key_code: a, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow , modifiers: [ left_control ] } ]


  ################################################################
  #                      Hyper Application                       #
  ################################################################
  - description: Hyper Application
    manipulators:

      #==========================================================#
      # ( a ) --> Notion                                       #
      #==========================================================#
      - description: 'a = Notion'
        type: basic
        from: { key_code: a, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a 'Notion' } ]

      #==========================================================#
      # ( e ) --> Edge / finder                                  #
      #==========================================================#
      - description: 'e = Microsoft Edge'
        type: basic
        from: { key_code: e, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a 'Microsoft Edge' } ]

      - description: 'command + e = finder'
        type: basic
        from: { key_code: e, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a finder } ]

      #==========================================================#
      # ( r ) --> vs code / Rider                                #
      #==========================================================#
      - description: 'r = vs code'
        type: basic
        from: { key_code: r, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a 'Visual Studio Code' } ]

      - description: 'command + r = Rider'
        type: basic
        from: { key_code: r, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a rider } ]

      #==========================================================#
      # ( t ) --> vscode / todoist                               #
      #==========================================================#
      - description: 't = iTerm2'
        type: basic
        from: { key_code: t, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a iTerm } ]

      - description: 'command + t = todoist'
        type: basic
        from: { key_code: t, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a todoist } ]

      #==========================================================#
      # ( y ) --> ExpressVPN / amphetamine                       #
      #==========================================================#
      - description: 'y = ExpressVPN'
        type: basic
        from: { key_code: y, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a ExpressVPN } ]

      - description: 'command + y = amphetamine'
        type: basic
        from: { key_code: y, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a amphetamine } ]

      #==========================================================#
      # ( f ) --> Finder / Dash                                  #
      #==========================================================#
      - description: 'command + f = Dash'
        type: basic
        from: { key_code: f, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a Dash } ]

      - description: 'f = finder'
        type: basic
        from: { key_code: f, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a finder } ]


  ################################################################
  #                    Hyper Terminal/IDE                        #
  ################################################################
  - description: Hyper Terminal
    manipulators:

      #==========================================================#
      # ( d ) -->  Ctrl-D (EOF)   |  Go to implementation        #
      #==========================================================#
      - description: 'command + d = Command+F12 (Rider)'
        type: basic
        from: { key_code: d, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: f12, modifiers: [ left_command ] } ]

      - description: 'd = ctrl-d (EOF)'
        type: basic
        from: { key_code: d, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: d , modifiers: [ left_control ] } ]

      #==========================================================#
      # ( z ) -->  Ctrl-Z (SIGTSTP)  |  F5 (VS Code Debug)       #
      #==========================================================#
      - description: 'command + z = F5 (vscode debug)'
        type: basic
        from: { key_code: z, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: f5 } ]

      - description: 'z = ctrl-z'
        type: basic
        from: { key_code: z, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: z , modifiers: [ left_control ] } ]

      #==========================================================#
      # ( x ) -->  Ctrl-R (Run)  |  Ctrl+F5 (VS Code Run)        #
      #==========================================================#
      - description: 'command + x = ctrl + F5 (vscode run)'
        type: basic
        from: { key_code: x, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: f5 , modifiers: [ left_control ] } ]

      - description: 'x = ctrl-r'
        type: basic
        from: { key_code: x, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: r , modifiers: [ left_control ] } ]

      #==========================================================#
      # ( c ) -->  Ctrl-C (SIGINT)  |  Shift+F5 (VS Code Stop)   #
      #==========================================================#
      - description: 'command + c = shift + F5 (vscode stop)'
        type: basic
        from: { key_code: c, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: f5 , modifiers: [ left_shift ] } ]

      - description: 'c = ctrl-c'
        type: basic
        from: { key_code: c, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c , modifiers: [ left_control ] } ]


  ################################################################
  #                        Hyper Clipboard                       #
  ################################################################
  - description: Hyper Clipboard
    manipulators:

      #==========================================================#
      # ( numbers ) -->  copy & paste TEXT via pbcopy|pbpaste    #
      #==========================================================#
      - description: 'command + 1 = copy to clip1'
        type: basic
        from: { key_code: '1', modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c, modifiers: [ left_command ] } , { shell_command: 'pbpaste > ~/.clip1' } ]

      - description: '1 = paste from clip1'
        type: basic
        from: { key_code: '1', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: 'cat ~/.clip1 | pbcopy ' },{ key_code: v, modifiers: [ left_command ] } ]

      - description: 'command + 2 = copy to clip2'
        type: basic
        from: { key_code: '2', modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c, modifiers: [ left_command ] } , { shell_command: 'pbpaste > ~/.clip2' } ]

      - description: '2 = paste from clip2'
        type: basic
        from: { key_code: '2', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: 'cat ~/.clip2 | pbcopy ' },{ key_code: v, modifiers: [ left_command ] } ]

      - description: 'command + 3 = copy to clip3'
        type: basic
        from: { key_code: '3', modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c, modifiers: [ left_command ] } , { shell_command: 'pbpaste > ~/.clip3' } ]

      - description: '3 = paste from clip3'
        type: basic
        from: { key_code: '3', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: 'cat ~/.clip3 | pbcopy ' },{ key_code: v, modifiers: [ left_command ] } ]

      - description: 'command + 4 = copy to clip4'
        type: basic
        from: { key_code: '4', modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c, modifiers: [ left_command ] } , { shell_command: 'pbpaste > ~/.clip4' } ]

      - description: '4 = paste from clip4'
        type: basic
        from: { key_code: '4', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: 'cat ~/.clip4 | pbcopy ' },{ key_code: v, modifiers: [ left_command ] } ]

      - description: 'command + 5 = copy to clip5'
        type: basic
        from: { key_code: '5', modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c, modifiers: [ left_command ] } , { shell_command: 'pbpaste > ~/.clip5' } ]

      - description: '5 = paste from clip5'
        type: basic
        from: { key_code: '5', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: 'cat ~/.clip5 | pbcopy ' },{ key_code: v, modifiers: [ left_command ] } ]

      - description: 'command + 6 = copy to clip6'
        type: basic
        from: { key_code: '6', modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c, modifiers: [ left_command ] } , { shell_command: 'pbpaste > ~/.clip6' } ]

      - description: '6 = paste from clip6'
        type: basic
        from: { key_code: '6', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: 'cat ~/.clip6 | pbcopy ' },{ key_code: v, modifiers: [ left_command ] } ]

      - description: 'command + 7 = copy to clip7'
        type: basic
        from: { key_code: '7', modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c, modifiers: [ left_command ] } , { shell_command: 'pbpaste > ~/.clip7' } ]

      - description: '7 = paste from clip7'
        type: basic
        from: { key_code: '7', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: 'cat ~/.clip7 | pbcopy ' },{ key_code: v, modifiers: [ left_command ] } ]

      - description: 'command + 8 = copy to clip8'
        type: basic
        from: { key_code: '8', modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c, modifiers: [ left_command ] } , { shell_command: 'pbpaste > ~/.clip8' } ]

      - description: '8 = paste from clip8'
        type: basic
        from: { key_code: '8', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: 'cat ~/.clip8 | pbcopy ' },{ key_code: v, modifiers: [ left_command ] } ]

      - description: 'command + 9 = copy to clip9'
        type: basic
        from: { key_code: '9', modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c, modifiers: [ left_command ] } , { shell_command: 'pbpaste > ~/.clip9' } ]

      - description: '9 = paste from clip9'
        type: basic
        from: { key_code: '9', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: 'cat ~/.clip9 | pbcopy ' },{ key_code: v, modifiers: [ left_command ] } ]

      - description: 'command + 0 = copy to clip0'
        type: basic
        from: { key_code: '0', modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c, modifiers: [ left_command ] } , { shell_command: 'pbpaste > ~/.clip0' } ]

      - description: '0 = paste from clip0'
        type: basic
        from: { key_code: '0', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: 'cat ~/.clip0 | pbcopy ' },{ key_code: v, modifiers: [ left_command ] } ]




  ################################################################
  #                        Hyper Shifter+                        #
  ################################################################
  - description: Hyper Shifter
    manipulators:

      #==========================================================#
      # [] -> () command:{}  option:<>
      #==========================================================#

      - description: 'open_bracket [ = ('
        type: basic
        from: { key_code: open_bracket, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '9' , modifiers: [ left_shift ] } ]

      - description: 'close_bracket ] = )'
        type: basic
        from: { key_code: close_bracket, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '0' , modifiers: [ left_shift ] } ]

      #==========================================================#
      # slash/backslash to comment
      #==========================================================#
      - description: 'backslash \ = command + / (comment)'
        type: basic
        from: { key_code: backslash, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: slash , modifiers: [ left_command ] } ]

      - description: 'slash / = command + / (comment)'
        type: basic
        from: { key_code: slash, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: slash , modifiers: [ left_command ] } ]


      #==========================================================#
      # semicolon  -->  =  (+command) !
      #==========================================================#
      - description: 'semicolon = equal_sign'
        type: basic
        from: { key_code: semicolon, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: equal_sign , modifiers: [ left_shift ] } ]
      
      - description: 'command + semicolon = !'
        type: basic
        from: { key_code: semicolon, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '1' , modifiers: [ left_shift ] } ]

      #==========================================================#
      # quote -->  `  (+command) ~"
      #==========================================================#
      - description: 'quote = `'
        type: basic
        from: { key_code: quote, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: grave_accent_and_tilde } ]

      - description: 'command + quote = ~'
        type: basic
        from: { key_code: quote, modifiers: { mandatory: [ left_command,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: grave_accent_and_tilde, modifiers: [ left_shift ] } ]
      
      - description: 'left_shift + escape = `'
        type: basic
        from: { key_code: escape, modifiers: { mandatory: [ left_shift ] } }
        to: [ { key_code: grave_accent_and_tilde } ]

      - description: 'right_shift + escape = ~'
        type: basic
        from: { key_code: escape, modifiers: { mandatory: [ right_shift ] } }
        to: [ { key_code: grave_accent_and_tilde, modifiers: [ left_shift ] } ]
...